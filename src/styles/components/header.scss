$header-height: 100px;

:root {
  --logo-color-blue-white: white;
}

@mixin header-width($prop: padding, $amount: 100px) {
  #{$prop}-left: $amount;
  #{$prop}-right: $amount;

  @media (max-width: 800px) {
    #{$prop}-left: $nonhero-margin;
    #{$prop}-right: $nonhero-margin;
  }
}

header.layout-header {
  height: $header-height;
  position: fixed;
  top: 0;
  width: 100%;
  display: flex;
  justify-content: space-between;

  padding-top: $nonhero-margin;
  padding-bottom: $nonhero-margin;

  @include header-width();

  @media (max-width: $breakpoint-header-scrolls) {
    position: absolute;
  }
}

// When against a hero, we use the --logo-color-blue-white to fade from white to blue as the user scrolls past the hero
// Otherwise, against a white background, we just use blue as the non-pink color
svg.header-logo {
  .human,
  .left-head {
    fill: $human-pink;
  }

  &.against-hero {
    .more,
    .internet,
    .right-head,
    .bodies {
      fill: var(--logo-color-blue-white);
    }
    .bodies {
      stroke: var(--logo-color-blue-white);
    }
  }

  &.against-white-bg {
    .more,
    .internet,
    .right-head,
    .bodies {
      fill: $human-blue;
    }
    .bodies {
      stroke: $human-blue;
    }
  }

  &:hover {
    .more,
    .internet {
      fill: $human-pink;
    }

    &.against-hero {
      .human {
        fill: var(--logo-color-blue-white);
      }
    }

    &.against-white-bg {
      .human {
        fill: $human-blue;
      }
    }
  }
}

// add keyframes animation in scss
@mixin animate($animation, $duration, $method, $delay, $times, $fill-mode) {
  animation: $animation $duration $method $delay $times $fill-mode;
}
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@keyframes rotate-nothing {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 1;
  }
}

@keyframes rotate-first {
  0% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  20%, 80% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  100% {
    opacity: 0;
    transform: translate3d(-25px, 0, 0);
  }
}

@keyframes rotate {
  0% {
    opacity: 0;
    transform: translate3d(50px, 0, 0);
  }

  20%, 80% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  100% {
    opacity: 0;
    transform: translate3d(-25px, 0, 0);
  }
}

@keyframes rotate-last {
  0% {
    opacity: 0;
    transform: translate3d(50px, 0, 0);
  }

  50%, 100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes dots-in {
  0% {
    opacity: 0;
    transform: translate3d(50px, 0, 0);
  }

  50% {
    opacity: 0;
  }

  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes words-right {
  0% {
    transform: translate3d(-50px, 0, 0);
  }

  80% {
    transform: translate3d(-50px, 0, 0);
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}

.mhi-rotating-logo {
  display: flex;
  align-items: center;
}

.mhi-rotating-logo-dots {
  position: relative;
  height: 120px;
  opacity: 0;

  .bottom-left {
    fill: $human-blue;
  }
  .top-right {
    fill: $human-pink;
  }

  animation-delay: 6s;
  animation-duration: 1.5s;
  animation-name: dots-in;
  animation-fill-mode: forwards;
}

.mhi-rotating-logo-words {
  width: 500px;
  animation-duration: 7.5s;
  animation-name: words-right;
  animation-fill-mode: forwards;
}

.rotatingText {
  font-style: italic;
  position: relative;
  width: 500px;
}

.rotatingText-adjective {
  font-family: "Open Sans", sans-serif;
  font-size: 50px;
  font-style: normal;
  font-weight: 700;
  left: 0;
  margin-bottom: 0;
  opacity: 0;
  position: absolute;
  right: 0;
  text-align: left;
  text-transform: uppercase;
  top: 0;
  width: 500px;
  line-height: 42px;
  animation-duration: 1.5s;
  animation-name: rotate;
  vertical-align: center;
  display: block;
}


header.layout-new-header {
  height: $header-height;
  position: fixed;
  top: 0;
  width: 100%;
  display: flex;
  justify-content: space-between;

  padding-top: $nonhero-margin + 5px;
  padding-bottom: $nonhero-margin + 10px;
  text-transform: capitalize;

  z-index: 100;

  @include header-width(padding);

  @media (max-width: $breakpoint-header-scrolls) {
    position: absolute;
  }

  > a.logo {
    display: flex;
    justify-content: center;

    @include onmobile {
      width: 100%;
    }
  }

  &.mhi {
    .link__container {
      width: 50px;
    }
  }

  a {
    color: var(--logo-color-blue-white);
    cursor: pointer;
    text-decoration: none;
    transition: border-bottom 0.3s;

    &:not(.home) {
      border-bottom: 2px transparent solid;
      &.active,
      &:hover {
        border-color: $human-pink;
      }
    }
  }

  .mhi-logo-rotating-words {
    display: flex;
    flex-direction: column;

    .human,
    .global,
    .important,
    .top-right {
      position: absolute;
      left: 0;
      fill: $human-pink;
    }

    &.against-hero {
      .upper-container,
      .mid-container,
      .bottom-container {
        position: relative;
        height: 15px;
      }
      .more,
      .internet,
      .join,
      .community,
      .support,
      .causes,
      .bottom-left {
        position: absolute;
        left: 0;
        fill: var(--logo-color-blue-white);
      }
      //testing flipOutX on join, gloabl and community classes selectors
      .more {
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXMore) {
          from {
            transform: perspective(400px);
          }

          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXMore, 5s, linear, 1s, 1, forwards);
      }
      .human {
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXMore) {
          from {
            transform: perspective(400px);
          }

          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXMore, 5s, linear, 1s, 1, forwards);
      }
      .internet {
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXMore) {
          from {
            transform: perspective(400px);
          }

          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXMore, 5s, linear, 1s, 1, forwards);
      }
      .join {
        opacity: 0;
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXJoin) {
          from {
            transform: perspective(400px);
            opacity: 1;
          }
          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXJoin, 5s, linear, 6s, 1, forwards);
      }
      .global {
        opacity: 0;
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXGlobal) {
          from {
            transform: perspective(400px);
            opacity: 1;
          }

          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXGlobal, 5s, linear, 6s, 1, forwards);
      }
      .community {
        opacity: 0;
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXCommunity) {
          from {
            transform: perspective(400px);
            opacity: 1;
          }

          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXCommunity, 5s, linear, 6s, 1, forwards);
      }
      .support {
        opacity: 0;
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXCommunity) {
          from {
            transform: perspective(400px);
            opacity: 1;
          }

          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXCommunity, 5s, linear, 11s, 1, none);
      }
      .important {
        opacity: 0;
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXGlobal) {
          from {
            transform: perspective(400px);
            opacity: 1;
          }

          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXGlobal, 5s, linear, 11s, 1, none);
      }
      .causes {
        opacity: 0;
        backface-visibility: visible !important;
        transform-origin: bottom;
        @include keyframes(flipOutXGlobal) {
          from {
            transform: perspective(400px);
            opacity: 1;
          }

          30% {
            transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
            opacity: 1;
          }

          to {
            transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
            opacity: 0;
          }
        }
        @include animate(flipOutXGlobal, 5s, linear, 11s, 1, none);
      }
    }

    &.against-white-bg {
      .more,
      .internet,
      .bottom-left {
        fill: $human-blue;
      }
    }

    &:hover {
      .more,
      .internet,
      .bottom-left {
        fill: $human-pink;
      }

      &.against-hero {
        .human,
        .top-right {
          fill: var(--logo-color-blue-white);
        }
      }
    }
  }

  svg.mhi-with-text-logo {
    .human,
    .global,
    .top-right {
      fill: $human-pink;
    }

    &.against-hero {
      .more,
      .internet,
      .join,
      .community,
      .bottom-left {
        fill: var(--logo-color-blue-white);
      }
    }

    &.against-white-bg {
      .more,
      .internet,
      .bottom-left {
        fill: $human-blue;
      }
    }

    &:hover {
      .more,
      .internet,
      .bottom-left {
        fill: $human-pink;
      }

      &.against-hero {
        .human,
        .top-right {
          fill: var(--logo-color-blue-white);
        }
      }

      &.against-white-bg {
        .human,
        .top-right {
          fill: $human-blue;
        }
      }
    }
  }
}

header.roar {
  height: auto;
  background-color: white;

  padding: 0 25px;

  svg.roar-logo {
    height: 60px;
    transition: all 0.3s;
    margin: 25px 0;
  }

  a.roar-home {
    display: flex;
  }

  a.internal-link {
    @include button-fonts;
    color: $human-pink;
    cursor: pointer;

    @media (max-width: 800px) {
      display: none;
    }
  }

  .other-links {
    display: flex;
    align-items: center;
    :not(:first-child) {
      margin-left: 24px;
    }
  }

  &.shrink {
    -webkit-box-shadow: 0px 0px 9px 3px rgba(41, 41, 41, 0.25);
    -moz-box-shadow: 0px 0px 9px 3px rgba(41, 41, 41, 0.25);
    box-shadow: 0px 0px 9px 3px rgba(41, 41, 41, 0.25);

    a.roar-home {
      svg.roar-logo {
        height: 40px;
        margin: 15px 0;
      }
    }
  }

  @media (max-width: 500px) {
    padding: 0 10px;
    svg.roar-logo {
      height: 50px;
      transition: all 0.3s;
      margin: 10px 0;
    }
  }
}
